/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package test;


import com.google.zxing.BarcodeFormat;
import com.google.zxing.EncodeHintType;
import com.google.zxing.MultiFormatWriter;
import com.google.zxing.client.j2se.MatrixToImageWriter;
import com.google.zxing.common.BitMatrix;
import com.google.zxing.qrcode.decoder.ErrorCorrectionLevel;
import java.awt.Color;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.JOptionPane;

/**
 *
 * @author Tran Trung Nghia
 */
public class NangCao_Regis extends javax.swing.JFrame {

        List<ThongTinDangNhap> lstThongTinDangNhap = new ArrayList<>();

        /**
         * Creates new form NangCao_Regis
         */
        public NangCao_Regis() {
                initComponents();
                setResizable(false);
                setLocationRelativeTo(null);
        }

        //------------------------------------------------------------------------------------------------------------------------------------------------
        public Object readObject(String path) throws Exception {
                try (FileInputStream fin = new FileInputStream(path); ObjectInputStream ois = new ObjectInputStream(fin);) {
                        Object obj = ois.readObject();
                        return obj;
                }

        }

        public void writeObject(String path, Object obj) throws Exception {
                try (
                        FileOutputStream fos = new FileOutputStream(path); ObjectOutputStream oos = new ObjectOutputStream(fos);) {
                        oos.writeObject(obj);
                }
        }

        public void saveToFile() throws Exception {
                writeObject("thongTinDangNhap_LAB3.txt", lstThongTinDangNhap);
        }

        public void loadToFile() throws Exception {
                lstThongTinDangNhap = (List<ThongTinDangNhap>) readObject("thongTinDangNhap_LAB3.txt");
        }

        //------------------------------------------------------------------------------------------------------------------------------------------------
        private void doiFormDangNhap() {
                NangCao_Login nc = new NangCao_Login();
                nc.setVisible(true);
                this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
                this.setVisible(false);
        }

        private void createQR(String data, String path, String charset, Map hashMap, int height, int width) {
                /*
                      <dependency>
                        <groupId>com.google.zxing</groupId>
                        <artifactId>core</artifactId>
                        <version>3.3.0</version>
                    </dependency>
                    <dependency>
                        <groupId>com.google.zxing</groupId>
                        <artifactId>javase</artifactId>
                        <version>3.3.0</version>
                    </dependency>
                 */
                try {
                        BitMatrix matrix = new MultiFormatWriter().encode(
                                new String(data.getBytes(charset), charset),
                                BarcodeFormat.QR_CODE, width, height);

                        MatrixToImageWriter.writeToFile(
                                matrix,
                                path.substring(path.lastIndexOf('.') + 1),
                                new File(path));
                } catch (Exception e) {
                        e.printStackTrace();
                }
        }

        /**
         * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
         */
        @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtTaiKhoan = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnDangKi = new javax.swing.JButton();
        btnHuyDangKi = new javax.swing.JButton();
        txtMatKhau = new javax.swing.JPasswordField();
        txtXacNhan = new javax.swing.JPasswordField();
        btnDangNhap = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("ĐĂNG KÍ");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Tài khoản");

        jLabel3.setText("Mật khẩu");

        jLabel4.setText("Xác nhận");

        btnDangKi.setText("Đăng kí");
        btnDangKi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDangKiActionPerformed(evt);
            }
        });

        btnHuyDangKi.setText("Hủy");
        btnHuyDangKi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHuyDangKiActionPerformed(evt);
            }
        });

        btnDangNhap.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnDangNhap.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnDangNhap.setText("Đăng nhập");
        btnDangNhap.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnDangNhapMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnDangNhapMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnDangNhapMouseExited(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(121, 121, 121)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                        .addComponent(btnDangNhap, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnDangKi)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                                .addComponent(btnHuyDangKi, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtTaiKhoan)
                            .addComponent(txtMatKhau)
                            .addComponent(txtXacNhan))))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(btnDangNhap, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtTaiKhoan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtMatKhau, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtXacNhan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDangKi)
                    .addComponent(btnHuyDangKi))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

        private void btnDangKiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDangKiActionPerformed
                // TODO add your handling code here:
                if (txtTaiKhoan.getText().isEmpty()) {
                        JOptionPane.showMessageDialog(this, "Nhập tài khoản", "Lỗi", JOptionPane.ERROR_MESSAGE);
                        txtTaiKhoan.requestFocus();
                        return;
                }
                if (String.valueOf(txtMatKhau.getPassword()).isEmpty()) {
                        JOptionPane.showMessageDialog(this, "Nhập mật khẩu", "Lỗi", JOptionPane.ERROR_MESSAGE);
                        txtMatKhau.requestFocus();
                        return;
                }
                if (String.valueOf(txtXacNhan.getPassword()).isEmpty()) {
                        JOptionPane.showMessageDialog(this, "Nhập xác nhận mật khẩu", "Lỗi", JOptionPane.ERROR_MESSAGE);
                        txtXacNhan.requestFocus();
                        return;
                }
                String mk = new String(txtMatKhau.getPassword());
                String xn = new String(txtXacNhan.getPassword());
                if (!mk.equals(xn)) {
                        JOptionPane.showMessageDialog(this, "Mật khẩu xác nhận không trùng", "Lỗi", JOptionPane.ERROR_MESSAGE);
                        txtXacNhan.requestFocus();
                        return;
                }
                // The data that the QR code will contain
                String data = txtTaiKhoan.getText() + " " + String.valueOf(txtMatKhau.getPassword());
                ThongTinDangNhap tt = new ThongTinDangNhap();
                tt.setId(txtTaiKhoan.getText());
                tt.setPassword(mk);
                tt.setIdAndPassword(data);
                lstThongTinDangNhap.add(tt);
                // save to file

                // The path where the image will get saved
                String path = txtTaiKhoan.getText() + "_LOGIN.png";

                // Encoding charset
                String charset = "UTF-8";
                Map<EncodeHintType, ErrorCorrectionLevel> hashMap
                        = new HashMap<EncodeHintType, ErrorCorrectionLevel>();

                hashMap.put(EncodeHintType.ERROR_CORRECTION,
                        ErrorCorrectionLevel.L);

                // Create the QR code and save
                // in the specified folder
                // as a jpg file
                createQR(data, path, charset, hashMap, 400, 400);
                try {
                        saveToFile();
                } catch (Exception e) {
                        e.printStackTrace();
                }
                int choice = JOptionPane.showConfirmDialog(this, "Tạo tài khoản thành công ! \nBạn có muốn đăng nhập ?", "Thông báo", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                if (choice == JOptionPane.YES_OPTION) {
                        doiFormDangNhap();
                }
        }//GEN-LAST:event_btnDangKiActionPerformed

        private void btnHuyDangKiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHuyDangKiActionPerformed
                // TODO add your handling code here:
                int choice = JOptionPane.showConfirmDialog(this, "Bạn có chắc muốn hủy đăng kí ?", "Thông báo", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                if (choice == JOptionPane.YES_OPTION) {
                        System.exit(0);
                } else {
                        return;
                }
        }//GEN-LAST:event_btnHuyDangKiActionPerformed

        private void btnDangNhapMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDangNhapMouseClicked
                // TODO add your handling code here:
                doiFormDangNhap();
        }//GEN-LAST:event_btnDangNhapMouseClicked

        private void btnDangNhapMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDangNhapMouseEntered
                // TODO add your handling code here:
                btnDangNhap.setForeground(Color.RED);
        }//GEN-LAST:event_btnDangNhapMouseEntered

        private void btnDangNhapMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDangNhapMouseExited
                // TODO add your handling code here:
                btnDangNhap.setForeground(Color.BLACK);
        }//GEN-LAST:event_btnDangNhapMouseExited

        /**
         * @param args the command line arguments
         */
        public static void main(String args[]) {
                /* Set the Nimbus look and feel */
                //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
                /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
                 */
                try {
                        for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                                if ("Nimbus".equals(info.getName())) {
                                        javax.swing.UIManager.setLookAndFeel(info.getClassName());
                                        break;
                                }
                        }
                } catch (ClassNotFoundException ex) {
                        java.util.logging.Logger.getLogger(NangCao_Regis.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                } catch (InstantiationException ex) {
                        java.util.logging.Logger.getLogger(NangCao_Regis.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                } catch (IllegalAccessException ex) {
                        java.util.logging.Logger.getLogger(NangCao_Regis.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                } catch (javax.swing.UnsupportedLookAndFeelException ex) {
                        java.util.logging.Logger.getLogger(NangCao_Regis.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                }
                //</editor-fold>

                /* Create and display the form */
                java.awt.EventQueue.invokeLater(new Runnable() {
                        public void run() {
                                new NangCao_Regis().setVisible(true);
                        }
                });
        }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDangKi;
    private javax.swing.JLabel btnDangNhap;
    private javax.swing.JButton btnHuyDangKi;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPasswordField txtMatKhau;
    private javax.swing.JTextField txtTaiKhoan;
    private javax.swing.JPasswordField txtXacNhan;
    // End of variables declaration//GEN-END:variables
}
